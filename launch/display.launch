<launch>
  <!-- Robot Init pose -->
  <arg name="x_pos" default="3.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="yaw_pos" default="0.0"/>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find collision_predictor)/robot.urdf.xacro"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model car -param robot_description -x $(arg x_pos) -y $(arg y_pos) -Y $(arg yaw_pos)" />
  
  <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <rosparam file="$(find collision_predictor)/config/joints.yaml" command="load" ns="joint_state_controller"/>
  <rosparam file="$(find collision_predictor)/config/bot_control.yaml" command="load" ns="diff_drive_controller" />

  <node name="bot_control" pkg="controller_manager" type="spawner"
    args="joint_state_controller diff_drive_controller"/>
</launch>